HONEI README FILE
-----------------


INSTALLING
----------

* Decompress and untar the honei archive.
* Run './configure' in the untarred honei archive's top-level directory.
* Run 'make' to build all libraries and applications. DOM: oder nur die libs? Verstehe gerade die Ausgabe von 'make install' nicht.
* Optionally run 'make check TYPE=quick'.

DOM: --with-visual scheint PFLICHT zu sein für CPE, denn ich sehe keine Applikation mit obigem configure.
teslaspule: /home/user/goeddeke/temp/honeitest/honei-RC1[509]>ls -la bin/
drwxr-xr-x  2 goeddeke lsiii   512 Dec  7 19:38 ./
drwxr-xr-x 12 goeddeke lsiii  1024 Dec  7 19:39 ../
-rwxr-xr-x  1 goeddeke lsiii 16344 Dec  7 19:38 honei-config*

DOM: mit --with-visual werden
-rwxr-xr-x  1 goeddeke lsiii  16344 Dec  7 19:44 honei-config*
-rwxr-xr-x  1 goeddeke lsiii 574399 Dec  7 19:44 honei-lbm*
-rwxr-xr-x  1 goeddeke lsiii 137015 Dec  7 19:44 honei-poisson*
-rwxr-xr-x  1 goeddeke lsiii 188153 Dec  7 19:44 honei-swe*
gebaut. So weit so gut, nur dass es honei-lbm im CPE nicht gibt. Code bleibt natürlich drin, aber die App würde ich nicht bauen wollen.

Zwischenfazit soweit: Das riecht sehr stark danach, als ob ein branch-cpe in git angebracht wäre.



To adapt the honei installation to your systems features, you can pass
several parameters to the configure script.
A full list can be obtained with './configure --help'.

The most common parameters are (see below for dependencies and additional
details):
--enable-cell           Build Cell BE support
--enable-gpu            Build GPU support
--enable-cuda           Build CUDA support
--enable-sse            Build SSE support
--with-visual           Include GUI support (required for some applications)
DIRK: "all visual application"? je nachdem wie markus tests + benchmarks erklaert...

Currently only common versions of the GNU Compiler Collection's
c++ compiler are fully supported and tested. Examples include
gcc releases 4.1.x (e.g. OpenSUSE Linux 10.2) DOM: PLEASE ADD MORE TESTED COMPILERS FROM YOUR DISTROS, e.g. gentoo
Consequently, only compiler flags for GCC are discussed in this file.


COMPILATION DEPENDENCIES AND ADDITIONAL DETAILS
-----------------------------------------------

Compiling individual backends typically requires more fine-tuning at
the configure stage than just passing --enable-XYZ:

- Optimised compiler settings:
  To create an optimised built for your machine (-march=, -mtune=, -ffoobar),
  pass these flags in CXXFLAGS to configure
- GUI and visualisation
  GUIs for the applications honei-poisson and honei-swe need OpenGL, X11 and (free-)GLUT
  headers and libraries. The applications are only built with --with-visual.
  Necessary files are installed with your graphics card driver, and freeglut is
  part of most Linux distributions, so we assume they have been set up properly
  prior to building HONEI.
- SSE backend:
  You need a machine with at least SSE2 support, such as AMD Athlon
  or Intel Pentium 4 or better.
  You must add the following gcc option to configure:
  CXXFLAGS="-msse2 -mfpmath=sse"
- CUDA backend:
  You need a machine with a CUDA-enabled GPU, and you need to use
  a Linux distribution supported by NVIDIA, see
          http://www.nvidia.com/cuda
  for details. Download and install CUDA and the corresponding device
  driver.
  Set the following environment variables according to your installation,
  ideally in your .shellrc configuration file. We assume here CUDA has been
  installed to /usr/local/cuda/2.0:
  $CUDA_INC_PATH -> /usr/local/cuda/2.0/include/
  $CUDA_LIB_PATH -> /usr/local/cuda/2.0/lib/
  $PATH          -> $PATH:/usr/local/cuda/2.0/bin/
  When configuring, add "-I$CUDA_INC_PATH" to CXXFLAGS,
  and "-L$CUDA_LIB_PATH" to LDFLAGS.
  and 'make' as usual.
- CELL Backend:
  The Cell backend relies heavily on the IBM Cell SDK 2.1.
  Therefore the IBM Cell SDK (at least version 2.1) and libspe2 should be installed properly,
  see http://www-128.ibm.com/developerworks/power/cell/ and
  http://www.bsc.es/plantillaH.php?cat_id=103 for details.
  When configuring, add CC=ppu-gcc CXX=ppu-g++ LD=ppu-ld
  and 'make' as usual.

- Examples
  SSE only, all applications, tuned for Core2Duo: ./configure --enable-sse --with-visual CXXFLAGS="-O3 -msse3 -mfpmath=sse -march=nocona"

  SSE+CUDA, all applications, "generic SSE": ./configure --enable-sse --enable-cuda --with-visual CXXFLAGS="-msse2 -mfpmath=sse -I$CUDA_INC_PATH" LDFLAGS="-L$CUDA_LIB_PATH"

  Cell only: ./configure --enable-cell CXXFLAGS="-O2 -fno-inline" CC=ppu-gcc CXX=ppu-g++ LD=ppu-ld


APPLICATIONS
------------
DOM: Please refer to the files README.poisson and README.swe for details.
DOM: As HONEI is work in progress, not all parameters can be set in the GUIs,
DOM: in particular, the backend has to be chosen at compile-time in the code.
DOM: ODER NICHT: ICH KOMPILIERE MIT ALLEN --enable DIE ES GIBT UND HACKE IRGENDWO IN
     poisson.hh RUM DAMIT ICH SSE GEGEN CUDA VERGLEICHEN KANN, ODER?
     BITTE DOKUMENTIEREN, MIT DEN BEIDEN SEPARATEN DATEIEN SIND WIR HIER AUF DER
     SICHEREN SEITE.
DOM: IN DEN README's SOLLTE AUCH BEANTWORTET WERDEN, WIE ICH ALS AUSGABE DIE TIMINGS
     BEKOMME DIE WIR IM PAPER BEHAUPTEN. ICH HABE MAL poisson GESTARTET UND SEHE EXAKT
     NICHTS. GUI ZEIGT ERGEBNISPLOT, CONSOLE ZEIGT ZAHL DER ITERATIONEN, UND DAS
     WAR ES DANN. ÜBRIGENS AUCH NUR, WENN ICH EINMAL PER MENÜ DAS SCENARIO WECHSELE.


BENCHMARKS
----------

DOM: WAS IST DAS? DAS IST NIRGENDWO ERKLÄRT. VIELLEICHT AUCH UNTER APPLICATIONS MIT
SEPARATEM README AUFNEHMEN?
The benchmarks can be found in /benchmark in the build directory.
The benchmark names should be self-explanatory.
By adding 'i' for interactive mode or 'cuda', 'sse', 'cell' to the benchmark call, you can specify what backends should be benchmarked.


RUNTIME PARAMETERS
------------------

To tune HONEI to your systems specifications, you can configure runtime parameters,
e.g. the number of SPEs used when executing Cell programs.
The easiest way to do so is to copy the file honei/honeirc from the honei tarball
to your home directory under the name .honeirc. Now you can edit ~/.honeirc and
adapt all settings to your needs.
