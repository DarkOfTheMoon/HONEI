HONEI README (benchmark/README)
-------------------------------

BENCHMARK DESCRIPTION
---------------------
The benchmarks in HONEI can be use to produce timings and/or transfer rate and/or performance information.
Note that for applications currently only pure execution times are available. To reproduce some of the results
presented in our paper, you need to know how to change values in benchmarks and how to run them. A list of all
relevant files is provided at the end of this filem and this README explains most of the relevant settings.

ENABLE VERBOSE MODE
-------------------
You can make use of the verbose mode of the HONEI solvers by adding the line
	'#define SOLVER_VERBOSE'
in the corresponing '*_BENCHMARK.cc' file before any includes are processed. This mode prints out iteration
numbers and defect-norms and other information that could be useful.

RUNNING BENCHMARKS
----------------------------
To run the benchmarks, process the following steps (it is assumed here, that HONEI has been built properly, see
the README in the HONEI root folder for instructions):

	- If not yet built, build the benchmarks by typing 'make' in the 'honei/benchmark/' directory.
	- Start the application by typing './<name>_BENCHMARK'. For example, to run the benchmarks provided in
	  'scaled_sum_BENCHMARK.cc' type './scaled_sum_BENCHMARK'.

SETTING UP BENCHMARK SCENARIOS (POISSON)
----------------------------------------
Set up new benchmark scenarios for the Poisson solver and run the benchmark by changing the values in the corresponding
_BENCHMARK.cc file or create new benchmarks by adding a benchmark to the instantiation list, usually at the end of the file.
In order to simply alter the problem size, do the following:
The problem sizes in benchmarks can be adjusted by simply changing the value of 'root_n' in the '*_BENCHMARK.cc' file.
Note that this number has to be a power of two added to one, i.e. 3, 9, 17, 33, 65,...,1025.


SETTING UP BENCHMARK SCENARIOS (SWE)
------------------------------------
Set up new benchmark scenarios for the SWE solver and run them by changing the values in the test file or
create new benchmarks by adding a them to the instantiation list, usually at the end of the file. In order to
simply alter the problem size, change the initial values of 'dwidth' and 'dheight' properly. You can also change
the value for the maximum number of timesteps to be performed by changing the value of 'timesteps'.
In principle, many aspects of the scenario can be changed to receive a different configuration of the SWE solver
Since setting up the relaxation based solver is a non-trivial task, the solver might not work or even crash if not
set up correctly. However, changing problem sizes and total number of timesteps to compute is save and
can be performed without computing any relaxation parameters.

RELEVANT FILES AS PRESENTED IN THE PAPER
----------------------------------------
FILE                                                    DESCRIPTION
benchmark/scaled_sum_BENCHMARK.cc                       Benchmark for AXPY.
benchmark/poisson_mg_fixed_banded_dirneu_BENCHMARK.cc   Benchmark for the fixed precision Multigrid solver.
benchmark/poisson_mg_mixed_banded_dirneu_BENCHMARK.cc   Benchmark for the mixed precision Multigrid solver.
benchmark/relax_solver_BENCHMARK.cc                     Benchmark for the fixed precision SWE solver.
benchmark/relax_solver_mp1_BENCHMARK.cc                 Benchmark for the mixed precision SWE solver configuration 1 (fixed full timestep).
benchmark/relax_solver_mp2_BENCHMARK.cc                 Benchmark for the mixed precision SWE solver configuration 2 (mixed prediction).
benchmark/solver_BENCHMARK.cc                           Benchmark for the SWE solver without application kernel optimization.


SAMPLE OUTPUT
-------------
FILE                                                    DESCRIPTION
benchmark/scaled_sum.out                                Sample output for AXPY.
benchmark/poisson_mg_mixed_banded_dirneu.out            Sample output for the mixed precision Multigrid solver.
benchmark/relax_solver_mp2.out                          Sample output for the mixed precision SWE solver configuration 2 (mixed prediction).
